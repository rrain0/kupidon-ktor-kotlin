

// include another config file into 'private-conf' variable
//private-conf: { include "application-private.conf" }
// get some value from included conf
//host: ${private-conf.db.connection.mongo.host}

// access env variables
// prop: ${PROP}
// get if provided:
// prop: ${?PROP}


ktor {

  development: false
  development: ${?KTOR_IS_DEVELOPMENT}

  deployment {

    port: ${KTOR_PORT}
    //sslPort: 50020

    // development live reload will watch this places to update running server
    watch: [ classes, resources ]
  }
  //security {
  //  ssl {
  //    keyStore: "build/resources/main/keystore.jks"
  //    keyAlias: sampleKeystoreAlias
  //    keyStorePassword: keystorePwd
  //    privateKeyPassword: keystorePwd
  //  }
  //}
  application {
    modules: [ com.rrain.kupidon.ApplicationKt.module ]
  }
}

db {
  connection {
    application-name: "kupidon"

    mongo {
      host: ${MONGO_HOST}
      port: ${MONGO_PORT}
      rs: ${MONGO_RS}
      database: ${MONGO_DATABASE}
      user: ${MONGO_USER}
      pwd: ${MONGO_PWD}
    }
  }

  user-pwd-hashing {
    // standard algorithm names: https://docs.oracle.com/en/java/javase/17/docs/specs/security/standard-names.html#securerandom-number-generation-algorithms
    algorithm: ${PWD_HASHING_ALGORITHM}
    secret: ${PWD_HASHING_SECRET}
    iterations: ${PWD_HASHING_ITERATIONS}
    hash-len: ${PWD_HASHING_HASH_LEN}
  }
}

jwt {
  refresh-token {
    secret: ${REFRESH_TOKEN_SECRET}
    // format "nd nh nm ns" "365d 7h 8m 59s" "50d" will be parsed by kotlin.time.Duration
    lifetime: 30d

    // server that issued token
    //issuer: "http://0.0.0.0:50020/"
    // what path to access
    //audience: "http://0.0.0.0:50020/api/refresh"
  }
  access-token {
    secret: ${ACCESS_TOKEN_SECRET}
    lifetime: 3m

    //issuer: "http://0.0.0.0:50020/"
    //audience: "http://0.0.0.0:50020/api"

    // The realm property allows you to set the realm to be passed in the WWW-Authenticate header
    // when accessing a protected route.
    // Browser stores different credentials for different realms.
    //realm: "Access to '/api'"
  }
  email-verify-access-token {
    lifetime: 1d
  }
}

mail {
  email: ${MAIL_EMAIL}
  pwd: ${MAIL_PWD}
}